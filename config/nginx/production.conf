# Anthias SaaS Platform - Production Nginx Configuration
# High-performance reverse proxy with SSL termination and load balancing

# Global Configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker Connections
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

# HTTP Configuration
http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Performance Optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;

    # Server Tokens
    server_tokens off;

    # Client Settings
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1000r/m;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Real IP Configuration (for load balancers/CDN)
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 127.0.0.1;
    real_ip_header X-Real-IP;
    real_ip_recursive on;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Backend Upstream Configuration
    upstream anthias_backend {
        least_conn;
        server anthias-server:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add more backend servers for horizontal scaling
        # server anthias-server-2:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }

    # WebSocket Upstream Configuration
    upstream anthias_websocket {
        server anthias-websocket:9001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Frontend Upstream Configuration
    upstream anthias_frontend {
        server anthias-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP to HTTPS Redirect
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Let's Encrypt ACME Challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main HTTPS Server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ${SERVER_NAME};

        # SSL Certificates
        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        # Security Headers for HTTPS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss:; frame-ancestors 'none';" always;

        # Connection and Request Limits
        limit_conn conn_limit_per_ip 50;
        limit_req zone=general burst=20 nodelay;

        # Root directory for static files
        root /data;

        # Main Application Routes
        location / {
            # Rate limiting for general requests
            limit_req zone=general burst=20 nodelay;

            # Proxy to frontend
            proxy_pass http://anthias_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Caching for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                try_files $uri @frontend;
            }

            # Disable caching for HTML files
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                try_files $uri @frontend;
            }

            proxy_cache_bypass $http_upgrade;
        }

        # API Routes
        location /api/ {
            # Enhanced rate limiting for API
            limit_req zone=api burst=50 nodelay;

            # Proxy to Django backend
            proxy_pass http://anthias_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Admin Routes (Restricted)
        location /admin/ {
            # Strict rate limiting for admin
            limit_req zone=login burst=5 nodelay;

            # Additional security for admin interface
            # Optionally restrict by IP
            # allow 192.168.1.0/24;
            # deny all;

            # Proxy to Django backend
            proxy_pass http://anthias_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Extended timeouts for admin operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # WebSocket Routes
        location /ws/ {
            # WebSocket proxy configuration
            proxy_pass http://anthias_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;

            # Disable buffering for WebSockets
            proxy_buffering off;
        }

        # Static Files
        location /static/ {
            alias /data/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;

            # Compression for static files
            gzip_static on;

            # Security for static files
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Media Files (User Uploads)
        location /media/ {
            alias /data/media/;
            expires 1M;
            add_header Cache-Control "public";
            add_header X-Content-Type-Options nosniff;

            # Security for media files
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }

            # Restrict file types for security
            location ~* \.(exe|bat|cmd|com|pif|scr|vbs|js)$ {
                deny all;
            }
        }

        # Health Check Endpoint
        location /health {
            access_log off;
            proxy_pass http://anthias_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Robots.txt
        location = /robots.txt {
            alias /data/static/robots.txt;
            log_not_found off;
            access_log off;
        }

        # Favicon
        location = /favicon.ico {
            alias /data/static/favicon.ico;
            log_not_found off;
            access_log off;
            expires 1M;
        }

        # Security: Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            root /data/static/error_pages;
            internal;
        }

        location = /50x.html {
            root /data/static/error_pages;
            internal;
        }

        # Frontend fallback
        location @frontend {
            proxy_pass http://anthias_frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Additional server block for www redirect (optional)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.${SERVER_NAME};

        # SSL Certificates
        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        # Redirect www to non-www
        return 301 https://${SERVER_NAME}$request_uri;
    }
}